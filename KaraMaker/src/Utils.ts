export function pad(s: string, i: number) {
	while (s.length < i) {
		s = "0" + s;
	}
	return s;
}

export function readColor(color: string) {
	let c: Color = {
		red: parseInt(color.substring(1, 3), 16),
		green: parseInt(color.substring(3, 5), 16),
		blue: parseInt(color.substring(5, 7), 16),
		alpha: 255
	}
	if (color.length > 7)
		c.alpha = parseInt(color.substring(5, 7), 16);
	return c;
}

export function colorToString(color: Color) {
	return '#' + pad(color.red.toString(16), 2) +
				pad(color.green.toString(16), 2) +
				pad(color.blue.toString(16), 2) +
				pad(color.alpha?.toString(16), 2);
}

export function setAlphaRatio(color: string, alphaRatio: number) {
	let c = readColor(color);
	c.alpha = Math.floor(alphaRatio * 255);
	return c;
}

export function mix(color1: string, color2: string, ratio: number) {
	let c1 = readColor(color1);
	let c2 = readColor(color2);

	return colorToString({
		red: Math.floor(c1.red * (1 - ratio) + c2.red * ratio),
		green: Math.floor(c1.green * (1 - ratio) + c2.green * ratio),
		blue: Math.floor(c1.blue * (1 - ratio) + c2.blue * ratio),
		alpha: Math.floor(c1.alpha * (1 - ratio) + c2.alpha * ratio),
	});
}


export interface Color {
	red: number, green: number, blue: number, alpha: number
}

export function IsLetters(s: string) {
	return s.toLowerCase() !== s || s.toUpperCase() !== s;
}


export function IsUpper(s: string) {
	return s.toUpperCase() === s;
}


let vowels = [ 'a', 'e', 'i', 'o', 'u' ];

export function RomajiSplit(s: string): string[] {
	var indexes: number[] = [];
	for (let i = 0; i < s.length; i++) {
		if (vowels.includes(s.charAt(i)))
			i = readVowel(s, indexes, i);
		else if (IsLetters(s.charAt(i)) && !IsUpper(s.charAt(i))) {
			if (s.charAt(i) === 'n' && (s.length <= i + 1 || !vowels.includes(s.charAt(i + 1))))
				indexes.push(i);
			else {
				if (s.length > i + 1 && s.charAt(i) == s.charAt(i + 1)) {
					indexes.push(i);
					i++;
				}

				if (s.length > i + 1 && ((s.charAt(i) == 's' && s.charAt(i + 1) == 'h') || (s.charAt(i) == 't' && s.charAt(i + 1) == 's')))
					i++;

				if (s.length > i + 1 && (s.charAt(i + 1) == 'y' || s.charAt(i + 1) == 'w'))
					i++;

				if (s.length > i + 1 && vowels.includes(s.charAt(i + 1))) {
					i++;
					i = readVowel(s, indexes, i);
				}
			}
		}
		else
			indexes.push(i);

		while (s.length > i + 1 && (s.charAt(i + 1) == ' ' || s.charAt(i + 1) == ',' || s.charAt(i + 1) == '!' || s.charAt(i + 1) == '?' || s.charAt(i + 1) == '.')) {
			let index = indexes.indexOf(i);
			indexes.splice(index, 1);
			indexes.push(i + 1);
			i++;
		}
	}

	if ((indexes.length === 0 && s.length > 0) || indexes[indexes.length - 1] != s.length - 1)
		indexes.push(s.length - 1);

	let splits: string[] = [];
	let currentIndex = 0;
	for (let index of indexes) {
		splits.push(s.slice(currentIndex, index + 1));
		currentIndex = index + 1;
	}

	return splits;
}

function readVowel(s: string, splits: number[], i: number): number
{
	if ((s.length > i + 1) && (s.charAt(i + 1) == s.charAt(i) || (s.charAt(i) == 'e' && s.charAt(i + 1) == 'i') || (s.charAt(i) == 'o' && s.charAt(i + 1) == 'u'))) {
		splits.push(i);
		i++;
		splits.push(i);
	}
	else {
		splits.push(i);
	}
	return i;
}

export let baseFile = `[Script Info]
; Generated by Kara Maker
; http://www.aegisub.org/
Title: New subtitles
ScriptType: v4.00+
WrapStyle: 0
PlayResX: 0
PlayResY: 0
ScaledBorderAndShadow: yes

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
{voices}

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
{lyrics}`;

export let colorExport = "Style: {name},Arial,24,{color},&H00FFFFFF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1.5,0,8,2,2,20,1";


export function timestampToString(timestamp: number) {
	let hours = Math.floor(timestamp / 60 / 60);
	timestamp -= hours * 60 * 60;
	let minutes = Math.floor(timestamp / 60);
	timestamp -= minutes * 60;
	let seconds = Math.floor(timestamp);
	timestamp -= seconds;
	let centi = Math.floor(timestamp * 100);
	return hours + ':' + minutes + ':' + seconds + '.' + centi;
}

export function reverseColor(color: string) {
	return color.charAt(0) + color.charAt(5) + color.charAt(6) + color.charAt(3) + color.charAt(4) + color.charAt(1) + color.charAt(2);
}
